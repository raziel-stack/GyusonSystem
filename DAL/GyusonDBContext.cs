// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DAL
{
    public partial class GyusonDBContext : DbContext
    {
        public GyusonDBContext()
        {
        }

        public GyusonDBContext(DbContextOptions<GyusonDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Candidates> Candidates { get; set; }
        public virtual DbSet<CandidatesVslanguages> CandidatesVslanguages { get; set; }
        public virtual DbSet<Languages> Languages { get; set; }
        public virtual DbSet<VAllCandidates> VAllCandidates { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Candidates>(entity =>
            {
                entity.Property(e => e.LastUpdateDate).HasColumnType("date");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            modelBuilder.Entity<CandidatesVslanguages>(entity =>
            {
                entity.HasKey(e => new { e.CandidateId, e.LanguagesId });

                entity.ToTable("CandidatesVSLanguages");
            });

            modelBuilder.Entity<Languages>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<VAllCandidates>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("v_AllCandidates");

                entity.Property(e => e.LangIds).HasMaxLength(500);

                entity.Property(e => e.LangNames).HasMaxLength(2000);

                entity.Property(e => e.LastUpdateDate).HasColumnType("date");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}